name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      EB_ENVIRONMENT_NAME: ${{ secrets.EB_ENVIRONMENT_NAME }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: mbstring, pdo, pdo_mysql

      - name: Install PHP dependencies
        run: composer install --no-dev --optimize-autoloader

      - name: Check if package.json exists
        id: check_files
        run: |
          if [ -f "package.json" ]; then
            echo "package_json_exists=true" >> $GITHUB_OUTPUT
          else
            echo "package_json_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Install Node.js
        if: steps.check_files.outputs.package_json_exists == 'true'
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install Node.js dependencies
        if: steps.check_files.outputs.package_json_exists == 'true'
        run: npm install

      - name: Build assets
        if: steps.check_files.outputs.package_json_exists == 'true'
        run: npm run build

      - name: Generate version label
        id: version_label
        run: |
          TIMESTAMP=$(date +%Y-%m-%dT%H:%M:%S%z)
          echo "version=v-${{ github.run_number }}-${{ github.sha }}-${TIMESTAMP}" >> $GITHUB_OUTPUT

      - name: Prepare deployment package
        run: |
          # Just directly zip the repository with simple exclusions
          zip -r app.zip . -x "*.git*" "*.DS_Store" "node_modules/*" "tests/*" ".github/*"

      - name: Validate deployment package
        run: |
          if [ ! -f app.zip ]; then
            echo "Deployment package not created"
            exit 1
          fi
          ls -la app.zip

      - name: Log Environment Variables
        run: |
          echo "AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}"
          echo "AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          echo "EB_ENVIRONMENT_NAME: ${{ secrets.EB_ENVIRONMENT_NAME }}"
          echo "AWS_REGION: ${{ secrets.AWS_REGION }}"
          echo "VERSION_LABEL: ${{ steps.version_label.outputs.version }}"

      - name: Validate Environment Variables
        run: |
          if [[ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ]]; then echo "AWS_ACCESS_KEY_ID is not set"; exit 1; fi
          if [[ -z "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ]]; then echo "AWS_SECRET_ACCESS_KEY is not set"; exit 1; fi
          if [[ -z "${{ secrets.EB_ENVIRONMENT_NAME }}" ]]; then echo "EB_ENVIRONMENT_NAME is not set"; exit 1; fi
          if [[ -z "${{ secrets.AWS_REGION }}" ]]; then echo "AWS_REGION is not set"; exit 1; fi
          if [[ -z "${{ steps.version_label.outputs.version }}" ]]; then echo "VERSION_LABEL is not set"; exit 1; fi

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: battleships
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          region: ${{ secrets.AWS_REGION }}
          version_label: ${{ steps.version_label.outputs.version }}
          deployment_package: app.zip
          wait_for_deployment: true
